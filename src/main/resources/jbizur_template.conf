logging {
    level = "INFO"
    pattern = "[{level}] {date:HH:mm:ss:SSS} {class}.{method}(): {message}"
    writeToFile = "String?"
    writeToConsole = "boolean | true"
}

network {
    responseTimeoutSec = "long | 10"
    sendFailRetryCount = "int | 0"
    bufferedIO = "boolean | false"
    sendRecvAs = "String | OBJECT"
    serializer = "String | ee.ut.jbizur.protocol.ByteSerializer"
    server = "String | ee.ut.jbizur.network.io.tcp.custom.BlockingServerImpl"
    client = "String | ee.ut.jbizur.network.io.tcp.custom.BlockingClientImpl"
    shutdownWaitSec = "long | 300"

    tcp {
        keepalive = "boolean | true"
        defaultAddress = "String | 127.0.0.1:0"
    }

    multicast {
        enabled = "Boolean | true"
        address = "String | 230.0.0.1:54321"
        intervalms = "int | 1000"
    }
}

consensus {
    bizur {
        bucketCount = "int | 5"
        bucketElectRetryCount = "int | 5"
        maxElectionWaitSec = "long | 5"
    }
}

node {
    member {
        expectedCount = "int | 0"
        idFormat = "member%d"
    }
    client {
        expectedCount = "int | 0"
        idFormat = "member%d"
    }
}

members = [
    {
        id = "String | member"
        tcpAddress = "String | 127.0.0.1:0"
        instance = "boolean | false"
    }
]

clients = [
    {
        id = "String | client"
        tcpAddress = "String | 127.0.0.1:0"
        instance = "boolean | false"
    }
]

tests {
    functional {
        keyValueSetGetTest = "int?"
        keyValueSetGetMultiThreadTest = "int?"
        keyValueDeleteTest = "int?"
        keyValueDeleteMultiThreadTest = "int?"
        iterateKeysTest = "int?"

        clientMultiThreading = "boolean | true"
        serverMultiThreading = "boolean | true"
    }

    integration {
        simpleIterateKeysTest = "int?"
        keyValueSetGetMultiThreadTest = "int?"

    }
}